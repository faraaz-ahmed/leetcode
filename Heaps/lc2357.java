//2357. Make Array Zero by Subtracting Equal Amounts//        Solved//        Easy//        Topics//        Companies//        Hint//        You are given a non-negative integer array nums. In one operation, you must:////        Choose a positive integer x such that x is less than or equal to the smallest non-zero element in nums.//        Subtract x from every positive element in nums.//        Return the minimum number of operations to make every element in nums equal to 0.////////        Example 1:////        Input: nums = [1,5,0,3,5]//        Output: 3//        Explanation://        In the first operation, choose x = 1. Now, nums = [0,4,0,2,4].//        In the second operation, choose x = 2. Now, nums = [0,2,0,0,2].//        In the third operation, choose x = 2. Now, nums = [0,0,0,0,0].//        Example 2:////        Input: nums = [0]//        Output: 0//        Explanation: Each element in nums is already 0 so no operations are needed.//////        Constraints:////        1 <= nums.length <= 100//        0 <= nums[i] <= 100package Heaps;import java.util.PriorityQueue;import java.util.Queue;public class lc2357 {    class Solution {        public int minimumOperations(int[] nums) {            int recentDeductions = 0;            int numberOfOperations = 0;            Queue<Integer> heap = new PriorityQueue<>();            for (int num: nums) {                if (num > 0)                    heap.add(num);            }            while (heap.size() > 0) {                int currentDeduction = heap.remove();                if (recentDeductions != currentDeduction)                    numberOfOperations++;                recentDeductions = currentDeduction;            }            return numberOfOperations;        }    }}